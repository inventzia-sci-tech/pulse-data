# generated by datamodel-codegen:
#   filename:  cdf_bar.yaml
#   timestamp: 2025-10-16T07:20:14+00:00

from __future__ import annotations

from datetime import date as date_aliased
from decimal import Decimal
from typing import Optional

from pydantic import AwareDatetime, BaseModel, ConfigDict


class MarketDataBar(BaseModel):
    """
    Schema for a cdf (common data format) market data bar
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    symb: str
    """
    Instrument symbol or identifier
    """
    op: Decimal
    """
    Open price
    """
    hi: Decimal
    """
    High price
    """
    lo: Decimal
    """
    Low price
    """
    cl: Decimal
    """
    Close price
    """
    vlm: Decimal
    """
    Volume traded during this bar
    """
    vwap: Optional[Decimal] = None
    """
    Volume-weighted average price (optional)
    """
    datetime: AwareDatetime
    """
    ISO 8601 timestamp representing the barâ€™s open/close time
    """
    count: Optional[int] = None
    """
    Number of trades aggregated in this bar (optional)
    """
    timestamp: int
    """
    Epoch timestamp (milliseconds) when the bar was generated or received
    """
    date: date_aliased
    """
    Trading date for the bar
    """
    expiry: Optional[str] = None
    """
    Option or futures expiry (optional)
    """
    strike: Optional[Decimal] = None
    """
    Option strike price (optional)
    """
    symExp: Optional[str] = None
    """
    Symbol + expiry composite identifier (optional)
    """
